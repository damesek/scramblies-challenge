{
"version":3,
"file":"goog.net.websocket.js",
"lineCount":155,
"mappings":"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",
"sources":["goog/net/websocket.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Definition of the WebSocket class.  A WebSocket provides a\n * bi-directional, full-duplex communications channel, over a single TCP socket.\n *\n * See http://dev.w3.org/html5/websockets/\n * for the full HTML5 WebSocket API.\n *\n * Typical usage will look like this:\n *\n *  const ws = new goog.net.WebSocket();\n *\n *  const handler = new goog.events.EventHandler();\n *  handler.listen(ws, goog.net.WebSocket.EventType.OPENED, onOpen);\n *  handler.listen(ws, goog.net.WebSocket.EventType.MESSAGE, onMessage);\n *\n *  try {\n *    ws.open('ws://127.0.0.1:4200');\n *  } catch (e) {\n *    ...\n *  }\n */\n\ngoog.provide('goog.net.WebSocket');\ngoog.provide('goog.net.WebSocket.ErrorEvent');\ngoog.provide('goog.net.WebSocket.EventType');\ngoog.provide('goog.net.WebSocket.MessageEvent');\n\ngoog.require('goog.Timer');\ngoog.require('goog.asserts');\ngoog.require('goog.debug.entryPointRegistry');\ngoog.require('goog.events');\ngoog.require('goog.events.Event');\ngoog.require('goog.events.EventTarget');\ngoog.require('goog.log');\ngoog.requireType('goog.debug.ErrorHandler');\n\n\n/**\n * Class encapsulating the logic for using a WebSocket.\n *\n * @param {!goog.net.WebSocket.Options=} opt_params Parameters describing\n *     behavior of the WebSocket.\n * @constructor\n * @extends {goog.events.EventTarget}\n */\ngoog.net.WebSocket = function(opt_params) {\n  'use strict';\n  goog.net.WebSocket.base(this, 'constructor');\n  if (!opt_params) {\n    opt_params = /** @type {!goog.net.WebSocket.Options} */ ({});\n  }\n  /** @private {boolean} @see goog.net.WebSocket.Options.autoReconnect */\n  this.autoReconnect_ = opt_params.autoReconnect != false;\n  /**\n   * @private {function(number): number}\n   * @see goog.net.WebSocket.Options.getNextReconnect\n   */\n  this.getNextReconnect_ =\n      opt_params.getNextReconnect || goog.net.WebSocket.EXPONENTIAL_BACKOFF_;\n  /**\n   * @private {goog.net.WebSocket.BinaryType}\n   * @see goog.net.WebSocket.Options.binaryType\n   */\n  this.binaryType_ =\n      opt_params.binaryType || goog.net.WebSocket.BinaryType.BLOB;\n\n  /**\n   * The time, in milliseconds, that must elapse before the next attempt to\n   * reconnect.\n   * @type {number}\n   * @private\n   */\n  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);\n};\ngoog.inherits(goog.net.WebSocket, goog.events.EventTarget);\n\n\n/** @enum {string} */\ngoog.net.WebSocket.BinaryType = {\n  ARRAY_BUFFER: 'arraybuffer',\n  BLOB: 'blob',\n};\n\n\n/** @record */\ngoog.net.WebSocket.Options = function() {\n  'use strict';\n  /**\n   * True if the web socket should automatically reconnect or not.  This is\n   * true by default.\n   * @type {boolean|undefined}\n   */\n  this.autoReconnect;\n\n  /**\n   * A function for obtaining the time until the next reconnect attempt. Given\n   * the reconnect attempt count (which is a positive integer), the function\n   * should return a positive integer representing the milliseconds to the\n   * next reconnect attempt.  The default function used is an exponential\n   * back-off. Note that this function is never called if auto reconnect is\n   * disabled.\n   * @type {(function(number): number)|undefined}\n   */\n  this.getNextReconnect;\n\n  /**\n   * Specifies the type of incoming binary messages, either Blob or\n   * ArrayBuffer.\n   * @type {!goog.net.WebSocket.BinaryType|undefined}\n   */\n  this.binaryType;\n};\n\n/**\n * The actual web socket that will be used to send/receive messages.\n * @type {?WebSocket}\n * @private\n */\ngoog.net.WebSocket.prototype.webSocket_ = null;\n\n\n/**\n * The URL to which the web socket will connect.\n * @type {?string}\n * @private\n */\ngoog.net.WebSocket.prototype.url_ = null;\n\n\n/**\n * The subprotocol name used when establishing the web socket connection.\n * @type {string|undefined}\n * @private\n */\ngoog.net.WebSocket.prototype.protocol_ = undefined;\n\n\n/**\n * True if a call to the close callback is expected or not.\n * @type {boolean}\n * @private\n */\ngoog.net.WebSocket.prototype.closeExpected_ = false;\n\n\n/**\n * Keeps track of the number of reconnect attempts made since the last\n * successful connection.\n * @type {number}\n * @private\n */\ngoog.net.WebSocket.prototype.reconnectAttempt_ = 0;\n\n\n/** @private {?number} */\ngoog.net.WebSocket.prototype.reconnectTimer_ = null;\n\n\n/**\n * The logger for this class.\n * @type {?goog.log.Logger}\n * @private\n */\ngoog.net.WebSocket.prototype.logger_ = goog.log.getLogger('goog.net.WebSocket');\n\n\n/**\n * The events fired by the web socket.\n * @enum {string} The event types for the web socket.\n */\ngoog.net.WebSocket.EventType = {\n\n  /**\n   * Fired when an attempt to open the WebSocket fails or there is a connection\n   * failure after a successful connection has been established.\n   */\n  CLOSED: goog.events.getUniqueId('closed'),\n\n  /**\n   * Fired when the WebSocket encounters an error.\n   */\n  ERROR: goog.events.getUniqueId('error'),\n\n  /**\n   * Fired when a new message arrives from the WebSocket.\n   */\n  MESSAGE: goog.events.getUniqueId('message'),\n\n  /**\n   * Fired when the WebSocket connection has been established.\n   */\n  OPENED: goog.events.getUniqueId('opened'),\n};\n\n\n/**\n * The various states of the web socket.\n * @enum {number} The states of the web socket.\n * @private\n */\ngoog.net.WebSocket.ReadyState_ = {\n  // This is the initial state during construction.\n  CONNECTING: 0,\n  // This is when the socket is actually open and ready for data.\n  OPEN: 1,\n  // This is when the socket is in the middle of a close handshake.\n  // Note that this is a valid state even if the OPEN state was never achieved.\n  CLOSING: 2,\n  // This is when the socket is actually closed.\n  CLOSED: 3,\n};\n\n/**\n * The maximum amount of time between reconnect attempts for the exponential\n * back-off in milliseconds.\n * @type {number}\n * @private\n */\ngoog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_ = 60 * 1000;\n\n\n/**\n * Computes the next reconnect time given the number of reconnect attempts since\n * the last successful connection.\n *\n * @param {number} attempt The number of reconnect attempts since the last\n *     connection.\n * @return {number} The time, in milliseconds, until the next reconnect attempt.\n * @const\n * @private\n */\ngoog.net.WebSocket.EXPONENTIAL_BACKOFF_ = function(attempt) {\n  'use strict';\n  const time = Math.pow(2, attempt) * 1000;\n  return Math.min(time, goog.net.WebSocket.EXPONENTIAL_BACKOFF_CEILING_);\n};\n\n\n/**\n * Installs exception protection for all entry points introduced by\n * goog.net.WebSocket instances which are not protected by\n * {@link goog.debug.ErrorHandler#protectWindowSetTimeout},\n * {@link goog.debug.ErrorHandler#protectWindowSetInterval}, or\n * {@link goog.events.protectBrowserEventEntryPoint}.\n *\n * @param {!goog.debug.ErrorHandler} errorHandler Error handler with which to\n *     protect the entry points.\n */\ngoog.net.WebSocket.protectEntryPoints = function(errorHandler) {\n  'use strict';\n  goog.net.WebSocket.prototype.onOpen_ =\n      errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onOpen_);\n  goog.net.WebSocket.prototype.onClose_ =\n      errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onClose_);\n  goog.net.WebSocket.prototype.onMessage_ =\n      errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onMessage_);\n  goog.net.WebSocket.prototype.onError_ =\n      errorHandler.protectEntryPoint(goog.net.WebSocket.prototype.onError_);\n};\n\n\n/**\n * Creates and opens the actual WebSocket.  Only call this after attaching the\n * appropriate listeners to this object.  If listeners aren't registered, then\n * the `goog.net.WebSocket.EventType.OPENED` event might be missed.\n *\n * @param {string} url The URL to which to connect.\n * @param {string=} opt_protocol The subprotocol to use.  The connection will\n *     only be established if the server reports that it has selected this\n *     subprotocol. The subprotocol name must all be a non-empty ASCII string\n *     with no control characters and no spaces in them (i.e. only characters\n *     in the range U+0021 to U+007E).\n */\ngoog.net.WebSocket.prototype.open = function(url, opt_protocol) {\n  'use strict';\n  // Sanity check.  This works only in modern browsers.\n  goog.asserts.assert(\n      goog.global['WebSocket'], 'This browser does not support WebSocket');\n\n  // Don't do anything if the web socket is already open.\n  goog.asserts.assert(!this.isOpen(), 'The WebSocket is already open');\n\n  // Clear any pending attempts to reconnect.\n  this.clearReconnectTimer_();\n\n  // Construct the web socket.\n  this.url_ = url;\n  this.protocol_ = opt_protocol;\n\n  // This check has to be made otherwise you get protocol mismatch exceptions\n  // for passing undefined, null, '', or [].\n  if (this.protocol_) {\n    goog.log.info(\n        this.logger_, 'Opening the WebSocket on ' + this.url_ +\n            ' with protocol ' + this.protocol_);\n    this.webSocket_ = new WebSocket(this.url_, this.protocol_);\n  } else {\n    goog.log.info(this.logger_, 'Opening the WebSocket on ' + this.url_);\n    this.webSocket_ = new WebSocket(this.url_);\n  }\n  this.webSocket_.binaryType = this.binaryType_;\n  // Register the event handlers.  Note that it is not possible for these\n  // callbacks to be missed because it is registered after the web socket is\n  // instantiated.  Because of the synchronous nature of JavaScript, this code\n  // will execute before the browser creates the resource and makes any calls\n  // to these callbacks.\n  this.webSocket_.onopen = goog.bind(this.onOpen_, this);\n  this.webSocket_.onclose = goog.bind(this.onClose_, this);\n  this.webSocket_.onmessage = goog.bind(this.onMessage_, this);\n  this.webSocket_.onerror = goog.bind(this.onError_, this);\n};\n\n\n/**\n * Closes the web socket connection.\n */\ngoog.net.WebSocket.prototype.close = function() {\n  'use strict';\n  // Clear any pending attempts to reconnect.\n  this.clearReconnectTimer_();\n\n  // Attempt to close only if the web socket was created.\n  if (this.webSocket_) {\n    goog.log.info(this.logger_, 'Closing the WebSocket.');\n\n    // Close is expected here since it was a direct call.  Close is considered\n    // unexpected when opening the connection fails or there is some other form\n    // of connection loss after being connected.\n    this.closeExpected_ = true;\n    this.webSocket_.close();\n    this.webSocket_ = null;\n  }\n};\n\n\n/**\n * Sends the message over the web socket.\n *\n * @param {string|!ArrayBuffer|!ArrayBufferView} message The message to send.\n */\ngoog.net.WebSocket.prototype.send = function(message) {\n  'use strict';\n  // Make sure the socket is ready to go before sending a message.\n  goog.asserts.assert(this.isOpen(), 'Cannot send without an open socket');\n\n  // Send the message and let onError_ be called if it fails thereafter.\n  this.webSocket_.send(message);\n};\n\n\n/**\n * Checks to see if the web socket is open or not.\n *\n * @return {boolean} True if the web socket is open, false otherwise.\n */\ngoog.net.WebSocket.prototype.isOpen = function() {\n  'use strict';\n  return !!this.webSocket_ &&\n      this.webSocket_.readyState == goog.net.WebSocket.ReadyState_.OPEN;\n};\n\n\n/**\n * Gets the number of bytes of data that have been queued using calls to send()\n * but not yet transmitted to the network.\n *\n * @return {number} Number of bytes of data that have been queued.\n */\ngoog.net.WebSocket.prototype.getBufferedAmount = function() {\n  'use strict';\n  return this.webSocket_.bufferedAmount;\n};\n\n\n/**\n * Called when the web socket has connected.\n *\n * @private\n */\ngoog.net.WebSocket.prototype.onOpen_ = function() {\n  'use strict';\n  goog.log.info(this.logger_, 'WebSocket opened on ' + this.url_);\n  this.dispatchEvent(goog.net.WebSocket.EventType.OPENED);\n\n  // Set the next reconnect interval.\n  this.reconnectAttempt_ = 0;\n  this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);\n};\n\n\n/**\n * Called when the web socket has closed.\n *\n * @param {!Event} event The close event.\n * @private\n */\ngoog.net.WebSocket.prototype.onClose_ = function(event) {\n  'use strict';\n  goog.log.info(this.logger_, 'The WebSocket on ' + this.url_ + ' closed.');\n\n  // Firing this event allows handlers to query the URL.\n  this.dispatchEvent(new goog.net.WebSocket.ClosedEvent(\n      event.code, event.reason, event.wasClean));\n\n  // Always clear out the web socket on a close event.\n  this.webSocket_ = null;\n\n  // See if this is an expected call to onClose_.\n  if (this.closeExpected_) {\n    goog.log.info(this.logger_, 'The WebSocket closed normally.');\n    // Only clear out the URL if this is a normal close.\n    this.url_ = null;\n    this.protocol_ = undefined;\n  } else {\n    // Unexpected, so try to reconnect.\n    goog.log.error(\n        this.logger_, 'The WebSocket disconnected unexpectedly: ' + event.data);\n\n    // Only try to reconnect if it is enabled.\n    if (this.autoReconnect_) {\n      // Log the reconnect attempt.\n      const seconds = Math.floor(this.nextReconnect_ / 1000);\n      goog.log.info(\n          this.logger_, 'Seconds until next reconnect attempt: ' + seconds);\n\n      // Actually schedule the timer.\n      this.reconnectTimer_ = goog.Timer.callOnce(\n          goog.bind(this.open, this, this.url_, this.protocol_),\n          this.nextReconnect_, this);\n\n      // Set the next reconnect interval.\n      this.reconnectAttempt_++;\n      this.nextReconnect_ = this.getNextReconnect_(this.reconnectAttempt_);\n    }\n  }\n  this.closeExpected_ = false;\n};\n\n\n/**\n * Called when a new message arrives from the server.\n *\n * @param {!MessageEvent<string|!ArrayBuffer|!Blob>} event The web socket\n *     message event.\n * @return {void}\n * @private\n */\ngoog.net.WebSocket.prototype.onMessage_ = function(event) {\n  'use strict';\n  this.dispatchEvent(new goog.net.WebSocket.MessageEvent(event.data));\n};\n\n\n/**\n * Called when there is any error in communication.\n *\n * @param {Event} event The error event containing the error data.\n * @private\n */\ngoog.net.WebSocket.prototype.onError_ = function(event) {\n  'use strict';\n  const data = /** @type {string} */ (event.data);\n  goog.log.error(this.logger_, 'An error occurred: ' + data);\n  this.dispatchEvent(new goog.net.WebSocket.ErrorEvent(data));\n};\n\n\n/**\n * Clears the reconnect timer.\n *\n * @private\n */\ngoog.net.WebSocket.prototype.clearReconnectTimer_ = function() {\n  'use strict';\n  if (this.reconnectTimer_ != null) {\n    goog.Timer.clear(this.reconnectTimer_);\n  }\n  this.reconnectTimer_ = null;\n};\n\n\n/** @override */\ngoog.net.WebSocket.prototype.disposeInternal = function() {\n  'use strict';\n  goog.net.WebSocket.base(this, 'disposeInternal');\n  this.close();\n};\n\n\n/**\n * Object representing a closed event.\n *\n * @param {number} code\n * @param {string} reason\n * @param {boolean} wasClean\n * @extends {goog.events.Event}\n * @constructor\n * @final\n */\ngoog.net.WebSocket.ClosedEvent = function(code, reason, wasClean) {\n  goog.net.WebSocket.ClosedEvent.base(\n      this, 'constructor', goog.net.WebSocket.EventType.CLOSED);\n\n  /**\n   * @type {number}\n   */\n  this.code = code;\n\n  /**\n   * @type {string}\n   */\n  this.reason = reason;\n\n  /**\n   * @type {boolean}\n   */\n  this.wasClean = wasClean;\n};\ngoog.inherits(goog.net.WebSocket.ClosedEvent, goog.events.Event);\n\n\n/**\n * Object representing a new incoming message event.\n *\n * @param {string|!ArrayBuffer|!Blob} message The raw message coming from the\n *     web socket.\n * @extends {goog.events.Event}\n * @constructor\n * @final\n */\ngoog.net.WebSocket.MessageEvent = function(message) {\n  'use strict';\n  goog.net.WebSocket.MessageEvent.base(\n      this, 'constructor', goog.net.WebSocket.EventType.MESSAGE);\n\n  // TODO this used to be just `string`, but that is incorrect. Until all usages\n  // have been cleaned up we need to leave this as ?.\n  /**\n   * The new message from the web socket.\n   * @type {?}\n   */\n  this.message = message;\n};\ngoog.inherits(goog.net.WebSocket.MessageEvent, goog.events.Event);\n\n\n/**\n * Object representing an error event. This is fired whenever an error occurs\n * on the web socket.\n *\n * @param {string} data The error data.\n * @extends {goog.events.Event}\n * @constructor\n * @final\n */\ngoog.net.WebSocket.ErrorEvent = function(data) {\n  'use strict';\n  goog.net.WebSocket.ErrorEvent.base(\n      this, 'constructor', goog.net.WebSocket.EventType.ERROR);\n\n  /**\n   * The error data coming from the web socket.\n   * @type {string}\n   */\n  this.data = data;\n};\ngoog.inherits(goog.net.WebSocket.ErrorEvent, goog.events.Event);\n\n\n// Register the WebSocket as an entry point, so that it can be monitored for\n// exception handling, etc.\ngoog.debug.entryPointRegistry.register(\n    /**\n     * @param {function(!Function): !Function} transformer The transforming\n     *     function.\n     */\n    function(transformer) {\n      'use strict';\n      goog.net.WebSocket.prototype.onOpen_ =\n          transformer(goog.net.WebSocket.prototype.onOpen_);\n      goog.net.WebSocket.prototype.onClose_ =\n          transformer(goog.net.WebSocket.prototype.onClose_);\n      goog.net.WebSocket.prototype.onMessage_ =\n          transformer(goog.net.WebSocket.prototype.onMessage_);\n      goog.net.WebSocket.prototype.onError_ =\n          transformer(goog.net.WebSocket.prototype.onError_);\n    });\n"],
"names":["goog","provide","require","requireType","net","WebSocket","goog.net.WebSocket","opt_params","base","autoReconnect_","autoReconnect","getNextReconnect_","getNextReconnect","EXPONENTIAL_BACKOFF_","binaryType_","binaryType","BinaryType","BLOB","nextReconnect_","reconnectAttempt_","inherits","events","EventTarget","ARRAY_BUFFER","Options","goog.net.WebSocket.Options","prototype","webSocket_","url_","protocol_","undefined","closeExpected_","reconnectTimer_","logger_","log","getLogger","EventType","CLOSED","getUniqueId","ERROR","MESSAGE","OPENED","ReadyState_","CONNECTING","OPEN","CLOSING","EXPONENTIAL_BACKOFF_CEILING_","goog.net.WebSocket.EXPONENTIAL_BACKOFF_","attempt","time","Math","pow","min","protectEntryPoints","goog.net.WebSocket.protectEntryPoints","errorHandler","onOpen_","protectEntryPoint","onClose_","onMessage_","onError_","open","goog.net.WebSocket.prototype.open","url","opt_protocol","asserts","assert","global","isOpen","clearReconnectTimer_","info","onopen","bind","onclose","onmessage","onerror","close","goog.net.WebSocket.prototype.close","send","goog.net.WebSocket.prototype.send","message","goog.net.WebSocket.prototype.isOpen","readyState","getBufferedAmount","goog.net.WebSocket.prototype.getBufferedAmount","bufferedAmount","goog.net.WebSocket.prototype.onOpen_","dispatchEvent","goog.net.WebSocket.prototype.onClose_","event","ClosedEvent","code","reason","wasClean","error","data","seconds","floor","Timer","callOnce","goog.net.WebSocket.prototype.onMessage_","MessageEvent","goog.net.WebSocket.prototype.onError_","ErrorEvent","goog.net.WebSocket.prototype.clearReconnectTimer_","clear","disposeInternal","goog.net.WebSocket.prototype.disposeInternal","goog.net.WebSocket.ClosedEvent","Event","goog.net.WebSocket.MessageEvent","goog.net.WebSocket.ErrorEvent","debug","entryPointRegistry","register","transformer"]
}
