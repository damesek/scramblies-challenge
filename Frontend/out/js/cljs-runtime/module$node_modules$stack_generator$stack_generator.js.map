{
"version":3,
"file":"module$node_modules$stack_generator$stack_generator.js",
"lineCount":2,
"mappings":"AAAAA,cAAA,CAAA,mDAAA,CAAwE,QAAQ,CAACC,MAAD,CAAQC,OAAR,CAAgBC,MAAhB,CAAuBC,OAAvB,CAAgC,CAC/G,SAAQ,CAACC,IAAD,CAAOC,OAAP,CAAgB,CAKC,UAAtB,GAAI,MAAOC,OAAX,EAAoCA,MAAOC,CAAAA,GAA3C,CACID,MAAA,CAAO,iBAAP,CAA0B,CAAC,YAAD,CAA1B,CAA0CD,OAA1C,CADJ,CAE8B,QAAvB,GAAI,MAAOF,QAAX,CACHD,MAAOC,CAAAA,OADJ,CACcE,OAAA,CAAQJ,OAAA,CAAQ,2CAAR,CAAR,CADd,CAGHG,IAAKI,CAAAA,cAHF,CAGmBH,OAAA,CAAQD,IAAKK,CAAAA,UAAb,CAVL,CAAxB,CAAA,CAYC,IAZD,CAYO,QAAQ,CAACA,UAAD,CAAa,CACzB,MAAO,CACHC,UAAWC,QAAkC,CAACC,IAAD,CAAO,CAChD,IAAIC,MAAQ,EAAZ,CACIC,aAAe,EAEC,SAApB,GAAI,MAAOF,KAAX,EAA6D,QAA7D,GAAgC,MAAOA,KAAKE,CAAAA,YAA5C;CACIA,YADJ,CACmBF,IAAKE,CAAAA,YADxB,CAKA,KADA,IAAIC,KAAOC,SAAUC,CAAAA,MACrB,CAAOF,IAAP,EAAeF,KAAMK,CAAAA,MAArB,CAA8BJ,YAA9B,EAA8CC,IAAA,CAAA,SAA9C,CAAA,CAAiE,CAG7D,IADA,IAAII,KAAWC,KAAJ,CAAUL,IAAA,CAAA,SAAkBG,CAAAA,MAA5B,CAAX,CACSG,EAAI,CAAb,CAAgBA,CAAhB,CAAoBF,IAAKD,CAAAA,MAAzB,CAAiC,EAAEG,CAAnC,CACIF,IAAA,CAAKE,CAAL,CAAA,CAAUN,IAAA,CAAA,SAAA,CAAkBM,CAAlB,CAEV,gCAAgCC,CAAAA,IAAhC,CAAqCP,IAAKQ,CAAAA,QAAL,EAArC,CAAJ,CACIV,KAAMW,CAAAA,IAAN,CAAW,IAAIf,UAAJ,CAAe,CAACgB,aAAcC,MAAOC,CAAAA,EAArBF,EAA2BG,IAAAA,EAA5B,CAA6CT,IAA7C,CAAf,CAAX,CADJ,CAGIN,KAAMW,CAAAA,IAAN,CAAW,IAAIf,UAAJ,CAAe,CAAOU,IAAP,CAAf,CAAX,CAGJ,IAAI,CACAJ,IAAA,CAAOA,IAAKc,CAAAA,MADZ,CAEF,MAAOC,CAAP,CAAU,CACR,KADQ,CAdiD,CAkBjE,MAAOjB,MA3ByC,CADjD,CADkB,CAZ5B,CAD+G;",
"sources":["node_modules/stack-generator/stack-generator.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$stack_generator$stack_generator\"] = function(global,require,module,exports) {\n(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stack-generator', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.StackGenerator = factory(root.StackFrame);\n    }\n}(this, function(StackFrame) {\n    return {\n        backtrace: function StackGenerator$$backtrace(opts) {\n            var stack = [];\n            var maxStackSize = 10;\n\n            if (typeof opts === 'object' && typeof opts.maxStackSize === 'number') {\n                maxStackSize = opts.maxStackSize;\n            }\n\n            var curr = arguments.callee;\n            while (curr && stack.length < maxStackSize && curr['arguments']) {\n                // Allow V8 optimizations\n                var args = new Array(curr['arguments'].length);\n                for (var i = 0; i < args.length; ++i) {\n                    args[i] = curr['arguments'][i];\n                }\n                if (/function(?:\\s+([\\w$]+))+\\s*\\(/.test(curr.toString())) {\n                    stack.push(new StackFrame({functionName: RegExp.$1 || undefined, args: args}));\n                } else {\n                    stack.push(new StackFrame({args: args}));\n                }\n\n                try {\n                    curr = curr.caller;\n                } catch (e) {\n                    break;\n                }\n            }\n            return stack;\n        }\n    };\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","define","amd","StackGenerator","StackFrame","backtrace","StackGenerator$$backtrace","opts","stack","maxStackSize","curr","arguments","callee","length","args","Array","i","test","toString","push","functionName","RegExp","$1","undefined","caller","e"]
}
