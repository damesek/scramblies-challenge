{
"version":3,
"file":"module$node_modules$stacktrace_gps$stacktrace_gps.js",
"lineCount":14,
"mappings":"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",
"sources":["node_modules/stacktrace-gps/stacktrace-gps.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$stacktrace_gps$stacktrace_gps\"] = function(global,require,module,exports) {\n(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace-gps', ['source-map', 'stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('source-map/lib/source-map-consumer'), require('stackframe'));\n    } else {\n        root.StackTraceGPS = factory(root.SourceMap || root.sourceMap, root.StackFrame);\n    }\n}(this, function(SourceMap, StackFrame) {\n    'use strict';\n\n    /**\n     * Make a X-Domain request to url and callback.\n     *\n     * @param {String} url\n     * @returns {Promise} with response text if fulfilled\n     */\n    function _xdr(url) {\n        return new Promise(function(resolve, reject) {\n            var req = new XMLHttpRequest();\n            req.open('get', url);\n            req.onerror = reject;\n            req.onreadystatechange = function onreadystatechange() {\n                if (req.readyState === 4) {\n                    if ((req.status >= 200 && req.status < 300) ||\n                        (url.substr(0, 7) === 'file://' && req.responseText)) {\n                        resolve(req.responseText);\n                    } else {\n                        reject(new Error('HTTP status: ' + req.status + ' retrieving ' + url));\n                    }\n                }\n            };\n            req.send();\n        });\n\n    }\n\n    /**\n     * Convert a Base64-encoded string into its original representation.\n     * Used for inline sourcemaps.\n     *\n     * @param {String} b64str Base-64 encoded string\n     * @returns {String} original representation of the base64-encoded string.\n     */\n    function _atob(b64str) {\n        if (typeof window !== 'undefined' && window.atob) {\n            return window.atob(b64str);\n        } else {\n            throw new Error('You must supply a polyfill for window.atob in this environment');\n        }\n    }\n\n    function _parseJson(string) {\n        if (typeof JSON !== 'undefined' && JSON.parse) {\n            return JSON.parse(string);\n        } else {\n            throw new Error('You must supply a polyfill for JSON.parse in this environment');\n        }\n    }\n\n    function _findFunctionName(source, lineNumber/*, columnNumber*/) {\n        var syntaxes = [\n            // {name} = function ({args}) TODO args capture\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*function\\b/,\n            // function {name}({args}) m[1]=name m[2]=args\n            /function\\s+([^('\"`]*?)\\s*\\(([^)]*)\\)/,\n            // {name} = eval()\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*(?:eval|new Function)\\b/,\n            // fn_name() {\n            /\\b(?!(?:if|for|switch|while|with|catch)\\b)(?:(?:static)\\s+)?(\\S+)\\s*\\(.*?\\)\\s*\\{/,\n            // {name} = () => {\n            /['\"]?([$_A-Za-z][$_A-Za-z0-9]*)['\"]?\\s*[:=]\\s*\\(.*?\\)\\s*=>/\n        ];\n        var lines = source.split('\\n');\n\n        // Walk backwards in the source lines until we find the line which matches one of the patterns above\n        var code = '';\n        var maxLines = Math.min(lineNumber, 20);\n        for (var i = 0; i < maxLines; ++i) {\n            // lineNo is 1-based, source[] is 0-based\n            var line = lines[lineNumber - i - 1];\n            var commentPos = line.indexOf('//');\n            if (commentPos >= 0) {\n                line = line.substr(0, commentPos);\n            }\n\n            if (line) {\n                code = line + code;\n                var len = syntaxes.length;\n                for (var index = 0; index < len; index++) {\n                    var m = syntaxes[index].exec(code);\n                    if (m && m[1]) {\n                        return m[1];\n                    }\n                }\n            }\n        }\n        return undefined;\n    }\n\n    function _ensureSupportedEnvironment() {\n        if (typeof Object.defineProperty !== 'function' || typeof Object.create !== 'function') {\n            throw new Error('Unable to consume source maps in older browsers');\n        }\n    }\n\n    function _ensureStackFrameIsLegit(stackframe) {\n        if (typeof stackframe !== 'object') {\n            throw new TypeError('Given StackFrame is not an object');\n        } else if (typeof stackframe.fileName !== 'string') {\n            throw new TypeError('Given file name is not a String');\n        } else if (typeof stackframe.lineNumber !== 'number' ||\n            stackframe.lineNumber % 1 !== 0 ||\n            stackframe.lineNumber < 1) {\n            throw new TypeError('Given line number must be a positive integer');\n        } else if (typeof stackframe.columnNumber !== 'number' ||\n            stackframe.columnNumber % 1 !== 0 ||\n            stackframe.columnNumber < 0) {\n            throw new TypeError('Given column number must be a non-negative integer');\n        }\n        return true;\n    }\n\n    function _findSourceMappingURL(source) {\n        var sourceMappingUrlRegExp = /\\/\\/[#@] ?sourceMappingURL=([^\\s'\"]+)\\s*$/mg;\n        var lastSourceMappingUrl;\n        var matchSourceMappingUrl;\n        // eslint-disable-next-line no-cond-assign\n        while (matchSourceMappingUrl = sourceMappingUrlRegExp.exec(source)) {\n            lastSourceMappingUrl = matchSourceMappingUrl[1];\n        }\n        if (lastSourceMappingUrl) {\n            return lastSourceMappingUrl;\n        } else {\n            throw new Error('sourceMappingURL not found');\n        }\n    }\n\n    function _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache) {\n        return new Promise(function(resolve, reject) {\n            var loc = sourceMapConsumer.originalPositionFor({\n                line: stackframe.lineNumber,\n                column: stackframe.columnNumber\n            });\n\n            if (loc.source) {\n                // cache mapped sources\n                var mappedSource = sourceMapConsumer.sourceContentFor(loc.source);\n                if (mappedSource) {\n                    sourceCache[loc.source] = mappedSource;\n                }\n\n                resolve(\n                    // given stackframe and source location, update stackframe\n                    new StackFrame({\n                        functionName: loc.name || stackframe.functionName,\n                        args: stackframe.args,\n                        fileName: loc.source,\n                        lineNumber: loc.line,\n                        columnNumber: loc.column\n                    }));\n            } else {\n                reject(new Error('Could not get original source for given stackframe and source map'));\n            }\n        });\n    }\n\n    /**\n     * @constructor\n     * @param {Object} opts\n     *      opts.sourceCache = {url: \"Source String\"} => preload source cache\n     *      opts.sourceMapConsumerCache = {/path/file.js.map: SourceMapConsumer}\n     *      opts.offline = True to prevent network requests.\n     *              Best effort without sources or source maps.\n     *      opts.ajax = Promise returning function to make X-Domain requests\n     */\n    return function StackTraceGPS(opts) {\n        if (!(this instanceof StackTraceGPS)) {\n            return new StackTraceGPS(opts);\n        }\n        opts = opts || {};\n\n        this.sourceCache = opts.sourceCache || {};\n        this.sourceMapConsumerCache = opts.sourceMapConsumerCache || {};\n\n        this.ajax = opts.ajax || _xdr;\n\n        this._atob = opts.atob || _atob;\n\n        this._get = function _get(location) {\n            return new Promise(function(resolve, reject) {\n                var isDataUrl = location.substr(0, 5) === 'data:';\n                if (this.sourceCache[location]) {\n                    resolve(this.sourceCache[location]);\n                } else if (opts.offline && !isDataUrl) {\n                    reject(new Error('Cannot make network requests in offline mode'));\n                } else {\n                    if (isDataUrl) {\n                        // data URLs can have parameters.\n                        // see http://tools.ietf.org/html/rfc2397\n                        var supportedEncodingRegexp =\n                            /^data:application\\/json;([\\w=:\"-]+;)*base64,/;\n                        var match = location.match(supportedEncodingRegexp);\n                        if (match) {\n                            var sourceMapStart = match[0].length;\n                            var encodedSource = location.substr(sourceMapStart);\n                            var source = this._atob(encodedSource);\n                            this.sourceCache[location] = source;\n                            resolve(source);\n                        } else {\n                            reject(new Error('The encoding of the inline sourcemap is not supported'));\n                        }\n                    } else {\n                        var xhrPromise = this.ajax(location, {method: 'get'});\n                        // Cache the Promise to prevent duplicate in-flight requests\n                        this.sourceCache[location] = xhrPromise;\n                        xhrPromise.then(resolve, reject);\n                    }\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Creating SourceMapConsumers is expensive, so this wraps the creation of a\n         * SourceMapConsumer in a per-instance cache.\n         *\n         * @param {String} sourceMappingURL = URL to fetch source map from\n         * @param {String} defaultSourceRoot = Default source root for source map if undefined\n         * @returns {Promise} that resolves a SourceMapConsumer\n         */\n        this._getSourceMapConsumer = function _getSourceMapConsumer(sourceMappingURL, defaultSourceRoot) {\n            return new Promise(function(resolve) {\n                if (this.sourceMapConsumerCache[sourceMappingURL]) {\n                    resolve(this.sourceMapConsumerCache[sourceMappingURL]);\n                } else {\n                    var sourceMapConsumerPromise = new Promise(function(resolve, reject) {\n                        return this._get(sourceMappingURL).then(function(sourceMapSource) {\n                            if (typeof sourceMapSource === 'string') {\n                                sourceMapSource = _parseJson(sourceMapSource.replace(/^\\)\\]\\}'/, ''));\n                            }\n                            if (typeof sourceMapSource.sourceRoot === 'undefined') {\n                                sourceMapSource.sourceRoot = defaultSourceRoot;\n                            }\n\n                            resolve(new SourceMap.SourceMapConsumer(sourceMapSource));\n                        }).catch(reject);\n                    }.bind(this));\n                    this.sourceMapConsumerCache[sourceMappingURL] = sourceMapConsumerPromise;\n                    resolve(sourceMapConsumerPromise);\n                }\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, enhance function name and use source maps for a\n         * better StackFrame.\n         *\n         * @param {StackFrame} stackframe object\n         * @returns {Promise} that resolves with with source-mapped StackFrame\n         */\n        this.pinpoint = function StackTraceGPS$$pinpoint(stackframe) {\n            return new Promise(function(resolve, reject) {\n                this.getMappedLocation(stackframe).then(function(mappedStackFrame) {\n                    function resolveMappedStackFrame() {\n                        resolve(mappedStackFrame);\n                    }\n\n                    this.findFunctionName(mappedStackFrame)\n                        .then(resolve, resolveMappedStackFrame)\n                        // eslint-disable-next-line no-unexpected-multiline\n                        ['catch'](resolveMappedStackFrame);\n                }.bind(this), reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, guess function name from location information.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.findFunctionName = function StackTraceGPS$$findFunctionName(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureStackFrameIsLegit(stackframe);\n                this._get(stackframe.fileName).then(function getSourceCallback(source) {\n                    var lineNumber = stackframe.lineNumber;\n                    var columnNumber = stackframe.columnNumber;\n                    var guessedFunctionName = _findFunctionName(source, lineNumber, columnNumber);\n                    // Only replace functionName if we found something\n                    if (guessedFunctionName) {\n                        resolve(new StackFrame({\n                            functionName: guessedFunctionName,\n                            args: stackframe.args,\n                            fileName: stackframe.fileName,\n                            lineNumber: lineNumber,\n                            columnNumber: columnNumber\n                        }));\n                    } else {\n                        resolve(stackframe);\n                    }\n                }, reject)['catch'](reject);\n            }.bind(this));\n        };\n\n        /**\n         * Given a StackFrame, seek source-mapped location and return new enhanced StackFrame.\n         *\n         * @param {StackFrame} stackframe\n         * @returns {Promise} that resolves with enhanced StackFrame.\n         */\n        this.getMappedLocation = function StackTraceGPS$$getMappedLocation(stackframe) {\n            return new Promise(function(resolve, reject) {\n                _ensureSupportedEnvironment();\n                _ensureStackFrameIsLegit(stackframe);\n\n                var sourceCache = this.sourceCache;\n                var fileName = stackframe.fileName;\n                this._get(fileName).then(function(source) {\n                    var sourceMappingURL = _findSourceMappingURL(source);\n                    var isDataUrl = sourceMappingURL.substr(0, 5) === 'data:';\n                    var defaultSourceRoot = fileName.substring(0, fileName.lastIndexOf('/') + 1);\n\n                    if (sourceMappingURL[0] !== '/' && !isDataUrl && !(/^https?:\\/\\/|^\\/\\//i).test(sourceMappingURL)) {\n                        sourceMappingURL = defaultSourceRoot + sourceMappingURL;\n                    }\n\n                    return this._getSourceMapConsumer(sourceMappingURL, defaultSourceRoot)\n                        .then(function(sourceMapConsumer) {\n                            return _extractLocationInfoFromSourceMapSource(stackframe, sourceMapConsumer, sourceCache)\n                                .then(resolve)['catch'](function() {\n                                    resolve(stackframe);\n                                });\n                        });\n                }.bind(this), reject)['catch'](reject);\n            }.bind(this));\n        };\n    };\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","define","amd","StackTraceGPS","SourceMap","sourceMap","StackFrame","_xdr","url","Promise","resolve","reject","req","XMLHttpRequest","open","onerror","onreadystatechange","req.onreadystatechange","readyState","status","substr","responseText","Error","send","_atob","b64str","window","atob","_ensureStackFrameIsLegit","stackframe","TypeError","fileName","lineNumber","columnNumber","_findSourceMappingURL","source","sourceMappingUrlRegExp","lastSourceMappingUrl","matchSourceMappingUrl","exec","_extractLocationInfoFromSourceMapSource","sourceMapConsumer","sourceCache","loc","originalPositionFor","line","column","mappedSource","sourceContentFor","functionName","name","args","opts","sourceMapConsumerCache","ajax","_get","this._get","location","isDataUrl","offline","match","supportedEncodingRegexp","encodedSource","length","xhrPromise","method","then","bind","_getSourceMapConsumer","this._getSourceMapConsumer","sourceMappingURL","defaultSourceRoot","sourceMapConsumerPromise","sourceMapSource","replace","JSON","parse","string","sourceRoot","SourceMapConsumer","catch","pinpoint","this.pinpoint","getMappedLocation","mappedStackFrame","resolveMappedStackFrame","findFunctionName","this.findFunctionName","getSourceCallback","syntaxes","lines","split","code","maxLines","Math","min","i","commentPos","indexOf","index","len","m","undefined","guessedFunctionName","this.getMappedLocation","Object","defineProperty","create","substring","lastIndexOf","test"]
}
