{
"version":3,
"file":"goog.date.relative.js",
"lineCount":159,
"mappings":"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",
"sources":["goog/date/relative.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Functions for formatting relative dates.  Such as \"3 days ago\"\n * \"3 hours ago\", \"14 minutes ago\", \"12 days ago\", \"Today\", \"Yesterday\".\n *\n * Closure's I18N formatter for relative dates and times is by default to\n * format strings function. It provides plural forms and many locales\n * using standard data from the Common Data Locale Repository (CLDR).\n */\n\ngoog.provide('goog.date.relative');\ngoog.provide('goog.date.relative.TimeDeltaFormatter');\ngoog.provide('goog.date.relative.Unit');\n\ngoog.require('goog.i18n.DateTimeFormat');\ngoog.require('goog.i18n.DateTimePatterns');\ngoog.require('goog.i18n.RelativeDateTimeFormat');\ngoog.requireType('goog.date.DateTime');\n\ngoog.scope(function() {\n'use strict';\n// For referencing this module.\nvar RelativeDateTimeFormat =\n    goog.module.get('goog.i18n.RelativeDateTimeFormat');\n\n/**\n * Number of milliseconds in a minute.\n * @type {number}\n * @private\n */\ngoog.date.relative.MINUTE_MS_ = 60000;\n\n\n/**\n * Number of milliseconds in a day.\n * @type {number}\n * @private\n */\ngoog.date.relative.DAY_MS_ = 86400000;\n\n\n/**\n * Limit on number of days in past or future for formatting.\n * Since the timestamp is in milliseconds, the difference in days\n * is limited (10^9 milliseconds = 11.6 days.)\n * @type {number}\n * @private\n */\ngoog.date.relative.FORTNIGHT_ = 14;\n\n\n/**\n * Unicode UTF-16 surrogate range minimum\n * @type {number}\n * @private\n */\ngoog.date.relative.SURROGATE_LOW_ = 0xd800;\n\n\n/**\n * Unicode UTF-16 surrogate range maximum\n * @type {number}\n * @private\n */\ngoog.date.relative.SURROGATE_HIGH_ = 0xdfff;\n\n\n/**\n * Enumeration used to identify time units internally.\n * @enum {number}\n */\ngoog.date.relative.Unit = {\n  MINUTES: 0,\n  HOURS: 1,\n  DAYS: 2\n};\n\n\n/**\n * Full date formatter.\n * @type {?goog.i18n.DateTimeFormat}\n * @private\n */\ngoog.date.relative.fullDateFormatter_;\n\n\n/**\n * Short time formatter.\n * @type {?goog.i18n.DateTimeFormat}\n * @private\n */\ngoog.date.relative.shortTimeFormatter_;\n\n\n/**\n * Month-date formatter.\n * @type {?goog.i18n.DateTimeFormat}\n * @private\n */\ngoog.date.relative.monthDateFormatter_;\n\n\n/**\n * Casing mode: default true for backward compatibility\n * True causes formatDay to capitalize first character of\n * the returned string.\n * If false, the string is not changed.\n * @type {boolean}\n * @private\n */\ngoog.date.relative.casingMode_ = true;\n\n\n/**\n * Handles formatting of time deltas.\n * @private {?goog.date.relative.TimeDeltaFormatter}\n */\ngoog.date.relative.formatTimeDelta_;\n\n\n/**\n * Caller-settable function for formatting time. Default is internal\n * formatting using goog.i18n.RelativeDateTimeFormat\n * @typedef {function(number, boolean, !goog.date.relative.Unit): string}\n */\ngoog.date.relative.TimeDeltaFormatter;\n\n\n/**\n * Sets a different formatting function for time deltas (\"3 days ago\").\n * While its visibility is public, this function is Closure-internal and should\n * not be used in application code.\n * @param {!goog.date.relative.TimeDeltaFormatter} formatter The function to use\n *     for formatting time deltas (i.e. relative times).\n */\ngoog.date.relative.setTimeDeltaFormatter = function(formatter) {\n  'use strict';\n  goog.date.relative.formatTimeDelta_ = formatter;\n};\n\n\n/**\n * Sets casing mode to a boolean.\n * If true, the first letter of day formats (\"today\", \"yesterday\", \"tommorow\")\n * is capitalized using locale-aware toUpper.\n * If false, no casing is done on basic data.\n * @param {boolean} capitalizeMode\n */\ngoog.date.relative.setCasingMode = function(capitalizeMode) {\n  'use strict';\n  goog.date.relative.casingMode_ = capitalizeMode;\n};\n\n\n/**\n * Converts first letter of a string to upper case.\n * @param {string} text\n * @return {string}\n * @package Visible for testing\n */\ngoog.date.relative.upcase = function(text) {\n  'use strict';\n  // Note: Casing is harder than just handling the first character, so\n  // this is an approximation.\n\n  var codepointLength = 1;\n  // Check for surrogate values.\n  var codePoint0 = text.charCodeAt(0);\n  if (codePoint0 >= goog.date.relative.SURROGATE_LOW_ &&\n      codePoint0 <= goog.date.relative.SURROGATE_HIGH_) {\n    // It's a surrogate.\n    codepointLength = 2;\n  }\n  text = text.substring(0, codepointLength).toLocaleUpperCase() +\n      text.substring(codepointLength);\n  return text;\n};\n\n\n/**\n * Returns string with \"sentence casing\" for the input string, i.e.,\n * Finds Day unit in relative date time compatible values, if available.\n * then formats the result using that data.\n * If codepoints are surrogate code points, returns the string unchanged.\n * If no relative non-numeric data is available, returns null.\n *\n * @param {number} dayOffset Offset of day unit for lookup in rdtf symbols data.\n * @return {string|null}\n * @private\n */\ngoog.date.relative.relativeCasedString_ = function(dayOffset) {\n  'use strict';\n  var rdtf_formatter =\n      new RelativeDateTimeFormat(RelativeDateTimeFormat.NumericOption.AUTO);\n\n  var result =\n      rdtf_formatter.format(dayOffset, RelativeDateTimeFormat.Unit.DAY);\n\n  // Check for a digit in expected Auto results, which implies a Numeric\n  // result was actually returned.\n  // Limitation: This checks only for ASCII, Arabic, ArabicExtended digits.\n  if (!result || result.match(/[0-9\\u0660-\\u0669\\u06f0-\\u06f9]/g)) {\n    return null;\n  }\n\n  if (goog.date.relative.casingMode_) {\n    return goog.date.relative.upcase(result);\n  }\n  return result;\n};\n\n\n/**\n * Returns a date in month format, e.g. Mar 15.\n * @param {!Date} date The date object.\n * @return {string} The formatted string.\n * @private\n */\ngoog.date.relative.formatMonth_ = function(date) {\n  'use strict';\n  if (!goog.date.relative.monthDateFormatter_) {\n    goog.date.relative.monthDateFormatter_ =\n        new goog.i18n.DateTimeFormat(goog.i18n.DateTimePatterns.MONTH_DAY_ABBR);\n  }\n  return goog.date.relative.monthDateFormatter_.format(date);\n};\n\n\n/**\n * Returns a date in short-time format, e.g. 2:50 PM.\n * @param {!Date|!goog.date.DateTime} date The date object.\n * @return {string} The formatted string.\n * @private\n */\ngoog.date.relative.formatShortTime_ = function(date) {\n  'use strict';\n  if (!goog.date.relative.shortTimeFormatter_) {\n    goog.date.relative.shortTimeFormatter_ = new goog.i18n.DateTimeFormat(\n        goog.i18n.DateTimeFormat.Format.SHORT_TIME);\n  }\n  return goog.date.relative.shortTimeFormatter_.format(date);\n};\n\n\n/**\n * Returns a date in full date format, e.g. Tuesday, March 24, 2009.\n * @param {!Date|!goog.date.DateTime} date The date object.\n * @return {string} The formatted string.\n * @private\n */\ngoog.date.relative.formatFullDate_ = function(date) {\n  'use strict';\n  if (!goog.date.relative.fullDateFormatter_) {\n    goog.date.relative.fullDateFormatter_ =\n        new goog.i18n.DateTimeFormat(goog.i18n.DateTimeFormat.Format.FULL_DATE);\n  }\n  return goog.date.relative.fullDateFormatter_.format(date);\n};\n\n\n/**\n * Formats quantity and relative unit using i18n.relativedatetimeformat.\n * Converts absolute quantity and unit to relative date time compatible values,\n * then formats the result using that data.\n *\n * @param {number} absQuantity\n * @param {boolean} futureFlag\n * @param {!goog.date.relative.Unit} relUnit\n * @return {string}\n * @private\n */\ngoog.date.relative.rdtformat_ = function(absQuantity, futureFlag, relUnit) {\n  'use strict';\n  // Convert absolute value to negative for past, non-negative for future.\n  var quantity = futureFlag ? absQuantity : -absQuantity;\n\n  var rdtfFormatter = new RelativeDateTimeFormat();\n\n  var rdtfUnit;\n  switch (relUnit) {\n    case goog.date.relative.Unit.MINUTES:\n      rdtfUnit = RelativeDateTimeFormat.Unit.MINUTE;\n      break;\n    case goog.date.relative.Unit.HOURS:\n      rdtfUnit = RelativeDateTimeFormat.Unit.HOUR;\n      break;\n    default:\n    case goog.date.relative.Unit.DAYS:\n      rdtfUnit = RelativeDateTimeFormat.Unit.DAY;\n      break;\n  }\n  // Use locale-aware relatve date time formatter, compatible with ICU4C/ICU4J.\n  return rdtfFormatter.format(quantity, rdtfUnit);\n};\n\n\n/**\n * Accepts a timestamp in milliseconds and outputs a relative time in the form\n * of \"1 hour ago\", \"1 day ago\", \"in 1 hour\", \"in 2 days\" etc.  If the date\n * delta is over 2 weeks, then the output string will be empty.\n * @param {number} dateMs Date in milliseconds.\n * @return {string} The formatted date.\n */\ngoog.date.relative.format = function(dateMs) {\n  'use strict';\n  var now = goog.now();\n  var delta = Math.floor((now - dateMs) / goog.date.relative.MINUTE_MS_);\n\n  var future = false;\n\n  if (delta < 0) {\n    future = true;\n    delta *= -1;\n  }\n\n  if (delta < 60) {  // Minutes.\n    return goog.date.relative.formatTimeDelta_(\n        delta, future, goog.date.relative.Unit.MINUTES);\n\n  } else {\n    delta = Math.floor(delta / 60);\n    if (delta < 24) {  // Hours.\n      return goog.date.relative.formatTimeDelta_(\n          delta, future, goog.date.relative.Unit.HOURS);\n\n    } else {\n      // We can be more than 24 hours apart but still only 1 day apart, so we\n      // compare the closest time from today against the target time to find\n      // the number of days in the delta.\n      var midnight = new Date(goog.now());\n      midnight.setHours(0);\n      midnight.setMinutes(0);\n      midnight.setSeconds(0);\n      midnight.setMilliseconds(0);\n\n      // Convert to days ago.\n      delta =\n          Math.ceil((midnight.getTime() - dateMs) / goog.date.relative.DAY_MS_);\n\n      if (future) {\n        delta *= -1;\n      }\n\n      // Uses days for less than 2-weeks.\n      if (delta < goog.date.relative.FORTNIGHT_) {\n        return goog.date.relative.formatTimeDelta_(\n            delta, future, goog.date.relative.Unit.DAYS);\n\n      } else {\n        // For messages older than 2 weeks do not show anything.  The client\n        // should decide the date format to show.\n        return '';\n      }\n    }\n  }\n};\n\n\n/**\n * Accepts a timestamp in milliseconds and outputs a relative time in the form\n * of \"1 hour ago\", \"1 day ago\".  All future times will be returned as 0 minutes\n * ago.\n *\n * This is provided for compatibility with users of the previous incarnation of\n * the above {@see #format} method who relied on it protecting against\n * future dates.\n *\n * @param {number} dateMs Date in milliseconds.\n * @return {string} The formatted date.\n */\ngoog.date.relative.formatPast = function(dateMs) {\n  'use strict';\n  var now = goog.now();\n  if (now < dateMs) {\n    dateMs = now;\n  }\n  return goog.date.relative.format(dateMs);\n};\n\n\n/**\n * Accepts a timestamp in milliseconds and outputs a relative day. i.e. \"Today\",\n * \"Yesterday\", \"Tomorrow\", or \"Sept 15\".\n *\n * @param {number} dateMs Date in milliseconds.\n * @param {function(!Date):string=} opt_formatter Formatter for the date.\n *     Defaults to form 'MMM dd'.\n * @return {string} The formatted date.\n */\ngoog.date.relative.formatDay = function(dateMs, opt_formatter) {\n  'use strict';\n  var today = new Date(goog.now());\n\n  today.setHours(0);\n  today.setMinutes(0);\n  today.setSeconds(0);\n  today.setMilliseconds(0);\n\n  var dayOffset = (dateMs - today.getTime()) / goog.date.relative.DAY_MS_;\n\n  dayOffset = Math.floor(dayOffset);\n\n  var relativeResult = goog.date.relative.relativeCasedString_(dayOffset);\n\n  if (relativeResult) {\n    // Return the non-numeric answer such as \"ayer\" or \"tomorrow\".\n    return relativeResult;\n  }\n\n  // Use specialized formatting such as day and month when no\n  // special form for the offset is available.\n  var formatFunction = opt_formatter || goog.date.relative.formatMonth_;\n  return formatFunction(new Date(dateMs));\n};\n\n\n/**\n * Formats a date, adding the relative date in parenthesis.  If the date is less\n * than 24 hours then the time will be printed, otherwise the full-date will be\n * used.  Examples:\n *   2:20 PM (1 minute ago)\n *   Monday, February 27, 2009 (4 days ago)\n *   Tuesday, March 20, 2005    // Too long ago for a relative date.\n *\n * @param {!Date|!goog.date.DateTime} date A date object.\n * @param {string=} opt_shortTimeMsg An optional short time message can be\n *     provided if available, so that it's not recalculated in this function.\n * @param {string=} opt_fullDateMsg An optional date message can be\n *     provided if available, so that it's not recalculated in this function.\n * @return {string} The date string in the above form.\n */\ngoog.date.relative.getDateString = function(\n    date, opt_shortTimeMsg, opt_fullDateMsg) {\n  'use strict';\n  return goog.date.relative.getDateString_(\n      date, goog.date.relative.format, opt_shortTimeMsg, opt_fullDateMsg);\n};\n\n\n/**\n * Formats a date, adding the relative date in parenthesis.   Functions the same\n * as #getDateString but ensures that the date is always seen to be in the past.\n * If the date is in the future, it will be shown as 0 minutes ago.\n *\n * This is provided for compatibility with users of the previous incarnation of\n * the above {@see #getDateString} method who relied on it protecting against\n * future dates.\n *\n * @param {Date|goog.date.DateTime} date A date object.\n * @param {string=} opt_shortTimeMsg An optional short time message can be\n *     provided if available, so that it's not recalculated in this function.\n * @param {string=} opt_fullDateMsg An optional date message can be\n *     provided if available, so that it's not recalculated in this function.\n * @return {string} The date string in the above form.\n */\ngoog.date.relative.getPastDateString = function(\n    date, opt_shortTimeMsg, opt_fullDateMsg) {\n  'use strict';\n  return goog.date.relative.getDateString_(\n      date, goog.date.relative.formatPast, opt_shortTimeMsg, opt_fullDateMsg);\n};\n\n\n/**\n * Formats a date, adding the relative date in parenthesis.  If the date is less\n * than 24 hours then the time will be printed, otherwise the full-date will be\n * used.  Examples:\n *   2:20 PM (1 minute ago)\n *   Monday, February 27, 2009 (4 days ago)\n *   Tuesday, March 20, 2005    // Too long ago for a relative date.\n *\n * @param {Date|goog.date.DateTime} date A date object.\n * @param {function(number) : string} relativeFormatter Function to use when\n *     formatting the relative date.\n * @param {string=} opt_shortTimeMsg An optional short time message can be\n *     provided if available, so that it's not recalculated in this function.\n * @param {string=} opt_fullDateMsg An optional date message can be\n *     provided if available, so that it's not recalculated in this function.\n * @return {string} The date string in the above form.\n * @private\n */\ngoog.date.relative.getDateString_ = function(\n    date, relativeFormatter, opt_shortTimeMsg, opt_fullDateMsg) {\n  'use strict';\n  var dateMs = date.getTime();\n\n  var relativeDate = relativeFormatter(dateMs);\n\n  if (relativeDate) {\n    relativeDate = ' (' + relativeDate + ')';\n  }\n\n  var delta = Math.floor((goog.now() - dateMs) / goog.date.relative.MINUTE_MS_);\n  if (delta < 60 * 24) {\n    // TODO(user): this call raises an exception if date is a goog.date.Date.\n    return (opt_shortTimeMsg || goog.date.relative.formatShortTime_(date)) +\n        relativeDate;\n  } else {\n    return (opt_fullDateMsg || goog.date.relative.formatFullDate_(date)) +\n        relativeDate;\n  }\n};\n});  // End of scope for RelativeDateTimeFormat.\n\n// Set default formatter for date/time.\ngoog.date.relative.setTimeDeltaFormatter(goog.date.relative.rdtformat_);\n"],
"names":["goog","provide","require","requireType","scope","RelativeDateTimeFormat","module","get","date","relative","MINUTE_MS_","DAY_MS_","FORTNIGHT_","SURROGATE_LOW_","SURROGATE_HIGH_","Unit","MINUTES","HOURS","DAYS","fullDateFormatter_","shortTimeFormatter_","monthDateFormatter_","casingMode_","formatTimeDelta_","TimeDeltaFormatter","setTimeDeltaFormatter","goog.date.relative.setTimeDeltaFormatter","formatter","setCasingMode","goog.date.relative.setCasingMode","capitalizeMode","upcase","goog.date.relative.upcase","text","codepointLength","codePoint0","charCodeAt","substring","toLocaleUpperCase","relativeCasedString_","goog.date.relative.relativeCasedString_","dayOffset","rdtf_formatter","NumericOption","AUTO","result","format","DAY","match","formatMonth_","goog.date.relative.formatMonth_","i18n","DateTimeFormat","DateTimePatterns","MONTH_DAY_ABBR","formatShortTime_","goog.date.relative.formatShortTime_","Format","SHORT_TIME","formatFullDate_","goog.date.relative.formatFullDate_","FULL_DATE","rdtformat_","goog.date.relative.rdtformat_","absQuantity","futureFlag","relUnit","quantity","rdtfFormatter","rdtfUnit","MINUTE","HOUR","goog.date.relative.format","dateMs","now","delta","Math","floor","future","midnight","Date","setHours","setMinutes","setSeconds","setMilliseconds","ceil","getTime","formatPast","goog.date.relative.formatPast","formatDay","goog.date.relative.formatDay","opt_formatter","today","relativeResult","formatFunction","getDateString","goog.date.relative.getDateString","opt_shortTimeMsg","opt_fullDateMsg","getDateString_","getPastDateString","goog.date.relative.getPastDateString","goog.date.relative.getDateString_","relativeFormatter","relativeDate"]
}
