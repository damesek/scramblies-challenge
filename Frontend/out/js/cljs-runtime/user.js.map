{"version":3,"sources":["user.cljs"],"mappings":"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","names":["lambdaisland.glogi.console/install!","lambdaisland.glogi/set-levels","user/start","cljs.core/reset!","lambdaisland.chui.test-data/test-ns-data","or__4253__auto__","cljs.core/meta","main.tailwind.app-test/passing-tests","cljs.test/do-report","main.tailwind.app-test/failing-tests","lambdaisland.glogi.log","cljs.core/identity","cljs.core/deref","js/window.requestIdleCallback","lambdaisland.chui.ui/run-tests","user/stop","done","lambdaisland.chui.runner.terminate_BANG_","user/init","app","goog.dom/createElement","goog.dom/setProperties","goog.dom/append","js/document.body","lambdaisland.chui.ui/render!"],"sourcesContent":["(ns user\n  \"Runner namespace to be used with shadow-cljs's :browser-test target.\"\n  {:dev/always true}\n  (:require [goog.dom :as gdom]\n            [lambdaisland.chui.runner :as runner]\n            [lambdaisland.chui.ui :as ui]\n            [lambdaisland.chui.test-data :as test-data]\n            [lambdaisland.glogi :as log]\n            [lambdaisland.glogi.console :as glogi-console]))\n\n(glogi-console/install!)\n\n(log/set-levels\n  '{:glogi/root :debug\n    lambdaisland :all\n    lambdaisland.chui.interceptor :error})\n\n(defn start []\n      ;; This is a macro which finds all test vars, and stores their metadata inside\n      ;; the build, so chui-core can pick that up\n      (test-data/capture-test-data!)\n      (js/window.requestIdleCallback #(ui/run-tests)))\n\n(defn stop [done]\n      ;; Unique thing about Chui is that it can actually stop a ClojureScript build\n      ;; that's in progress, although only at the next interceptor point, e.g.\n      ;; before/after a test var, fixture, or async test block\n      (runner/terminate! done))\n\n(defn ^:export init []\n      ;; This is called only once. We render the Chui-ui interface. This is not\n      ;; necessary, you don't need the chui-ui (e.g. you wouldn't have it if this\n      ;; was a node build), it just gives you another interface onto the test\n      ;; runner (chui-core). Kaocha-cljs2 (via funnel and chui-remote) gives you\n      ;; another interface over *the same test run*\n      (let [app (gdom/createElement \"div\")]\n           (gdom/setProperties app #js {:id \"chui-container\"})\n           (gdom/append js/document.body app)\n           (ui/render! app))\n      (start))\n"]}