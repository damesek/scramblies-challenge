{
"version":3,
"file":"module$node_modules$error_stack_parser$error_stack_parser.js",
"lineCount":9,
"mappings":"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",
"sources":["node_modules/error-stack-parser/error-stack-parser.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$error_stack_parser$error_stack_parser\"] = function(global,require,module,exports) {\n(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('error-stack-parser', ['stackframe'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('stackframe'));\n    } else {\n        root.ErrorStackParser = factory(root.StackFrame);\n    }\n}(this, function ErrorStackParser(StackFrame) {\n    'use strict';\n\n    var FIREFOX_SAFARI_STACK_REGEXP = /(^|@)\\S+:\\d+/;\n    var CHROME_IE_STACK_REGEXP = /^\\s*at .*(\\S+:\\d+|\\(native\\))/m;\n    var SAFARI_NATIVE_CODE_REGEXP = /^(eval@)?(\\[native code])?$/;\n\n    return {\n        /**\n         * Given an Error object, extract the most information from it.\n         *\n         * @param {Error} error object\n         * @return {Array} of StackFrames\n         */\n        parse: function ErrorStackParser$$parse(error) {\n            if (typeof error.stacktrace !== 'undefined' || typeof error['opera#sourceloc'] !== 'undefined') {\n                return this.parseOpera(error);\n            } else if (error.stack && error.stack.match(CHROME_IE_STACK_REGEXP)) {\n                return this.parseV8OrIE(error);\n            } else if (error.stack) {\n                return this.parseFFOrSafari(error);\n            } else {\n                throw new Error('Cannot parse given Error object');\n            }\n        },\n\n        // Separate line and column numbers from a string of the form: (URI:Line:Column)\n        extractLocation: function ErrorStackParser$$extractLocation(urlLike) {\n            // Fail-fast but return locations like \"(native)\"\n            if (urlLike.indexOf(':') === -1) {\n                return [urlLike];\n            }\n\n            var regExp = /(.+?)(?::(\\d+))?(?::(\\d+))?$/;\n            var parts = regExp.exec(urlLike.replace(/[()]/g, ''));\n            return [parts[1], parts[2] || undefined, parts[3] || undefined];\n        },\n\n        parseV8OrIE: function ErrorStackParser$$parseV8OrIE(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(CHROME_IE_STACK_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                if (line.indexOf('(eval ') > -1) {\n                    // Throw away eval information until we implement stacktrace.js/stackframe#8\n                    line = line.replace(/eval code/g, 'eval').replace(/(\\(eval at [^()]*)|(,.*$)/g, '');\n                }\n                var sanitizedLine = line.replace(/^\\s+/, '').replace(/\\(eval code/g, '(').replace(/^.*?\\s+/, '');\n\n                // capture and preseve the parenthesized location \"(/foo/my bar.js:12:87)\" in\n                // case it has spaces in it, as the string is split on \\s+ later on\n                var location = sanitizedLine.match(/ (\\(.+\\)$)/);\n\n                // remove the parenthesized location from the line, if it was matched\n                sanitizedLine = location ? sanitizedLine.replace(location[0], '') : sanitizedLine;\n\n                // if a location was matched, pass it to extractLocation() otherwise pass all sanitizedLine\n                // because this line doesn't have function name\n                var locationParts = this.extractLocation(location ? location[1] : sanitizedLine);\n                var functionName = location && sanitizedLine || undefined;\n                var fileName = ['eval', '<anonymous>'].indexOf(locationParts[0]) > -1 ? undefined : locationParts[0];\n\n                return new StackFrame({\n                    functionName: functionName,\n                    fileName: fileName,\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        },\n\n        parseFFOrSafari: function ErrorStackParser$$parseFFOrSafari(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !line.match(SAFARI_NATIVE_CODE_REGEXP);\n            }, this);\n\n            return filtered.map(function(line) {\n                // Throw away eval information until we implement stacktrace.js/stackframe#8\n                if (line.indexOf(' > eval') > -1) {\n                    line = line.replace(/ line (\\d+)(?: > eval line \\d+)* > eval:\\d+:\\d+/g, ':$1');\n                }\n\n                if (line.indexOf('@') === -1 && line.indexOf(':') === -1) {\n                    // Safari eval frames only have function names and nothing else\n                    return new StackFrame({\n                        functionName: line\n                    });\n                } else {\n                    var functionNameRegex = /((.*\".+\"[^@]*)?[^@]*)(?:@)/;\n                    var matches = line.match(functionNameRegex);\n                    var functionName = matches && matches[1] ? matches[1] : undefined;\n                    var locationParts = this.extractLocation(line.replace(functionNameRegex, ''));\n\n                    return new StackFrame({\n                        functionName: functionName,\n                        fileName: locationParts[0],\n                        lineNumber: locationParts[1],\n                        columnNumber: locationParts[2],\n                        source: line\n                    });\n                }\n            }, this);\n        },\n\n        parseOpera: function ErrorStackParser$$parseOpera(e) {\n            if (!e.stacktrace || (e.message.indexOf('\\n') > -1 &&\n                e.message.split('\\n').length > e.stacktrace.split('\\n').length)) {\n                return this.parseOpera9(e);\n            } else if (!e.stack) {\n                return this.parseOpera10(e);\n            } else {\n                return this.parseOpera11(e);\n            }\n        },\n\n        parseOpera9: function ErrorStackParser$$parseOpera9(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)/i;\n            var lines = e.message.split('\\n');\n            var result = [];\n\n            for (var i = 2, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(new StackFrame({\n                        fileName: match[2],\n                        lineNumber: match[1],\n                        source: lines[i]\n                    }));\n                }\n            }\n\n            return result;\n        },\n\n        parseOpera10: function ErrorStackParser$$parseOpera10(e) {\n            var lineRE = /Line (\\d+).*script (?:in )?(\\S+)(?:: In function (\\S+))?$/i;\n            var lines = e.stacktrace.split('\\n');\n            var result = [];\n\n            for (var i = 0, len = lines.length; i < len; i += 2) {\n                var match = lineRE.exec(lines[i]);\n                if (match) {\n                    result.push(\n                        new StackFrame({\n                            functionName: match[3] || undefined,\n                            fileName: match[2],\n                            lineNumber: match[1],\n                            source: lines[i]\n                        })\n                    );\n                }\n            }\n\n            return result;\n        },\n\n        // Opera 10.65+ Error.stack very similar to FF/Safari\n        parseOpera11: function ErrorStackParser$$parseOpera11(error) {\n            var filtered = error.stack.split('\\n').filter(function(line) {\n                return !!line.match(FIREFOX_SAFARI_STACK_REGEXP) && !line.match(/^Error created at/);\n            }, this);\n\n            return filtered.map(function(line) {\n                var tokens = line.split('@');\n                var locationParts = this.extractLocation(tokens.pop());\n                var functionCall = (tokens.shift() || '');\n                var functionName = functionCall\n                    .replace(/<anonymous function(: (\\w+))?>/, '$2')\n                    .replace(/\\([^)]*\\)/g, '') || undefined;\n                var argsRaw;\n                if (functionCall.match(/\\(([^)]*)\\)/)) {\n                    argsRaw = functionCall.replace(/^[^(]+\\(([^)]*)\\)$/, '$1');\n                }\n                var args = (argsRaw === undefined || argsRaw === '[arguments not available]') ?\n                    undefined : argsRaw.split(',');\n\n                return new StackFrame({\n                    functionName: functionName,\n                    args: args,\n                    fileName: locationParts[0],\n                    lineNumber: locationParts[1],\n                    columnNumber: locationParts[2],\n                    source: line\n                });\n            }, this);\n        }\n    };\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","define","amd","ErrorStackParser","StackFrame","FIREFOX_SAFARI_STACK_REGEXP","CHROME_IE_STACK_REGEXP","SAFARI_NATIVE_CODE_REGEXP","parse","ErrorStackParser$$parse","error","stacktrace","parseOpera","stack","match","parseV8OrIE","parseFFOrSafari","Error","extractLocation","ErrorStackParser$$extractLocation","urlLike","indexOf","parts","regExp","exec","replace","undefined","ErrorStackParser$$parseV8OrIE","split","filter","filtered","line","map","sanitizedLine","location","locationParts","functionName","fileName","lineNumber","columnNumber","source","ErrorStackParser$$parseFFOrSafari","functionNameRegex","matches","ErrorStackParser$$parseOpera","e","message","length","parseOpera9","parseOpera11","parseOpera10","ErrorStackParser$$parseOpera9","lineRE","lines","result","i","len","push","ErrorStackParser$$parseOpera10","ErrorStackParser$$parseOpera11","tokens","pop","functionCall","shift","argsRaw","args"]
}
