{"version":3,"sources":["lambdaisland/funnel_client/websocket.cljs"],"mappings":"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","names":["lambdaisland.funnel-client.websocket/host-env","this","js/global","goog/global.document","js/goog","js/goog.global","js/goog.global.navigator","cljs.core._EQ_","goog/global.navigator.product","js/self","js/Error","lambdaisland.funnel-client.websocket/event-types","js/goog.net.WebSocket.EventType.OPENED","js/goog.net.WebSocket.EventType.CLOSED","js/goog.net.WebSocket.EventType.ERROR","js/goog.net.WebSocket.EventType.MESSAGE","lambdaisland.funnel-client.websocket/get-websocket-class","or__4253__auto__","lambdaisland.funnel_client.websocket.goog$module$goog$object.get","and__4251__auto__","e28906","js/require","e","js/console.log","lambdaisland.funnel-client.websocket/ensure-websocket","thunk","temp__5802__auto__","websocket-class","lambdaisland.funnel_client.websocket.goog$module$goog$object.set","result","var_args","G__28930","lambdaisland.funnel-client.websocket/make-websocket","lambdaisland.funnel_client.websocket.make_websocket","reconnect?","js/goog.net.WebSocket","lambdaisland.funnel-client.websocket/register-handlers*","ws","handler-map","seq__28935","cljs.core/seq","chunk__28936","count__28937","i__28938","vec__28955","cljs.core.nth","temp__5804__auto__","cljs.core/chunked-seq?","c__4679__auto__","cljs.core/chunk-first","cljs.core/chunk-rest","cljs.core/count","vec__28961","cljs.core/first","cljs.core/next","type","handler-fn","cljs.core.get","lambdaisland.funnel-client.websocket/register-handlers","lambdaisland.funnel-client.websocket/open!*","url","lambdaisland.funnel-client.websocket/open!","G__28987","lambdaisland.funnel-client.websocket/connect!","lambdaisland.funnel_client.websocket.connect_BANG_","lambdaisland.funnel-client.websocket/send!","msg","lambdaisland.funnel-client.websocket/open?","lambdaisland.funnel-client.websocket/close!","lambdaisland.funnel-client.websocket/message-data","event"],"sourcesContent":["(ns lambdaisland.funnel-client.websocket\n  \"Cross-platform websocket wrapper, borrowed from Figwheel.\n\n  Relies on goog.net.WebSocket (https://google.github.io/closure-library/api/goog.net.WebSocket.html)\"\n  (:require [goog.object :as gobj]\n            [goog.storage.mechanism.mechanismfactory :as storage-factory]\n            [goog.Uri :as guri]\n            [goog.string :as gstring]\n            [goog.net.jsloader :as loader]\n            [goog.net.XhrIo :as xhrio]\n            [goog.log :as glog]\n            [goog.array :as garray]\n            [goog.json :as gjson]\n            [goog.html.legacyconversions :as conv]\n            [goog.userAgent.product :as product])\n  (:import [goog.net WebSocket]\n           [goog.debug Console]\n           [goog.Uri QueryData]\n           [goog Promise]\n           [goog.storage.mechanism HTML5SessionStorage]))\n\n(def host-env\n  (cond\n    (this-as this\n      (identical? this\n                  (when (exists? js/global)\n                    js/global))) :node\n    (not (nil? goog/global.document)) :html\n    (and (exists? goog/global.navigator)\n         (= goog/global.navigator.product \"ReactNative\"))\n    :react-native\n    (and\n     (nil? goog/global.document)\n     (exists? js/self)\n     (exists? (.-importScripts js/self)))\n    :worker\n    :else\n    (throw (js/Error. (str `host-env \": Can't detect host env\")))))\n\n(def event-types\n  {;; OPENED Fired when the WebSocket connection has been established.\n   :open  goog.net.WebSocket.EventType.OPENED\n   ;; CLOSED Fired when an attempt to open the WebSocket fails or there is a connection failure after a successful connection has been established.\n   :close  goog.net.WebSocket.EventType.CLOSED\n   ;; ERROR Fired when the WebSocket encounters an error.\n   :error   goog.net.WebSocket.EventType.ERROR\n   ;; MESSAGE Fired when a new message arrives from the WebSocket.\n   :message goog.net.WebSocket.EventType.MESSAGE})\n\n(defn get-websocket-class []\n  (or\n   (gobj/get goog.global \"WebSocket\")\n   (gobj/get goog.global \"FIGWHEEL_WEBSOCKET_CLASS\")\n   (and (= host-env :node)\n        (try (js/require \"ws\")\n             (catch js/Error e\n               (js/console.log \"NODE_WS_NOT_FOUND\")\n               nil)))\n   (and (= host-env :worker)\n        (gobj/get js/self \"WebSocket\"))))\n\n(defn ensure-websocket [thunk]\n  (if (gobj/get goog.global \"WebSocket\")\n    (thunk)\n    (if-let [websocket-class (get-websocket-class)]\n      (do\n        (gobj/set goog.global \"WebSocket\" websocket-class)\n        (let [result (thunk)]\n          (gobj/set goog.global \"WebSocket\" nil)\n          result))\n      (throw (js/Error. (str `ensure-websocket \": no websocket class found\"))))))\n\n(defn make-websocket ^goog.net.WebSocket\n  ([]\n   (make-websocket true))\n  ([reconnect?]\n   (ensure-websocket #(goog.net.WebSocket. reconnect?))))\n\n(defn register-handlers* [^goog.net.WebSocket ws handler-map]\n  (doseq [[type handler-fn] handler-map]\n    ;; TODO addEventListener is deprecated, can we swap for (.listen ...)\n    (assert (get event-types type) type)\n    (.addEventListener ws (get event-types type) handler-fn)))\n\n(defn register-handlers [^goog.net.WebSocket ws handler-map]\n  (ensure-websocket #(register-handlers* ws handler-map)))\n\n(defn open!* [^goog.net.WebSocket ws url]\n  (.open ws url))\n\n(defn open! [^goog.net.WebSocket ws url]\n  (ensure-websocket #(open!* ws url)))\n\n(defn connect!\n  ([url handler-map]\n   (connect! url handler-map true))\n  ([url handler-map reconnect?]\n   (ensure-websocket\n    #(let [ws (goog.net.WebSocket. reconnect?)]\n       (register-handlers* ws handler-map)\n       (open!* ws url)\n       ws))))\n\n(defn send! [^goog.net.WebSocket ws msg]\n  (ensure-websocket #(.send ws msg)))\n\n(defn open? [^goog.net.WebSocket ws]\n  (ensure-websocket #(.isOpen ws)))\n\n(defn close! [^goog.net.WebSocket ws]\n  (.close ws))\n\n(defn message-data [event]\n  (gobj/get event \"message\"))\n"]}