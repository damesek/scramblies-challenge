{
"version":3,
"file":"module$node_modules$stacktrace_js$stacktrace.js",
"lineCount":8,
"mappings":"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",
"sources":["node_modules/stacktrace-js/stacktrace.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$stacktrace_js$stacktrace\"] = function(global,require,module,exports) {\n(function(root, factory) {\n    'use strict';\n    // Universal Module Definition (UMD) to support AMD, CommonJS/Node.js, Rhino, and browsers.\n\n    /* istanbul ignore next */\n    if (typeof define === 'function' && define.amd) {\n        define('stacktrace', ['error-stack-parser', 'stack-generator', 'stacktrace-gps'], factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory(require('error-stack-parser'), require('stack-generator'), require('stacktrace-gps'));\n    } else {\n        root.StackTrace = factory(root.ErrorStackParser, root.StackGenerator, root.StackTraceGPS);\n    }\n}(this, function StackTrace(ErrorStackParser, StackGenerator, StackTraceGPS) {\n    var _options = {\n        filter: function(stackframe) {\n            // Filter out stackframes for this library by default\n            return (stackframe.functionName || '').indexOf('StackTrace$$') === -1 &&\n                (stackframe.functionName || '').indexOf('ErrorStackParser$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackTraceGPS$$') === -1 &&\n                (stackframe.functionName || '').indexOf('StackGenerator$$') === -1;\n        },\n        sourceCache: {}\n    };\n\n    var _generateError = function StackTrace$$GenerateError() {\n        try {\n            // Error must be thrown to get stack in IE\n            throw new Error();\n        } catch (err) {\n            return err;\n        }\n    };\n\n    /**\n     * Merge 2 given Objects. If a conflict occurs the second object wins.\n     * Does not do deep merges.\n     *\n     * @param {Object} first base object\n     * @param {Object} second overrides\n     * @returns {Object} merged first and second\n     * @private\n     */\n    function _merge(first, second) {\n        var target = {};\n\n        [first, second].forEach(function(obj) {\n            for (var prop in obj) {\n                if (Object.prototype.hasOwnProperty.call(obj, prop)) {\n                    target[prop] = obj[prop];\n                }\n            }\n            return target;\n        });\n\n        return target;\n    }\n\n    function _isShapedLikeParsableError(err) {\n        return err.stack || err['opera#sourceloc'];\n    }\n\n    function _filtered(stackframes, filter) {\n        if (typeof filter === 'function') {\n            return stackframes.filter(filter);\n        }\n        return stackframes;\n    }\n\n    return {\n        /**\n         * Get a backtrace from invocation point.\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        get: function StackTrace$$get(opts) {\n            var err = _generateError();\n            return _isShapedLikeParsableError(err) ? this.fromError(err, opts) : this.generateArtificially(opts);\n        },\n\n        /**\n         * Get a backtrace from invocation point.\n         * IMPORTANT: Does not handle source maps or guess function names!\n         *\n         * @param {Object} opts\n         * @returns {Array} of StackFrame\n         */\n        getSync: function StackTrace$$getSync(opts) {\n            opts = _merge(_options, opts);\n            var err = _generateError();\n            var stack = _isShapedLikeParsableError(err) ? ErrorStackParser.parse(err) : StackGenerator.backtrace(opts);\n            return _filtered(stack, opts.filter);\n        },\n\n        /**\n         * Given an error object, parse it.\n         *\n         * @param {Error} error object\n         * @param {Object} opts\n         * @returns {Promise} for Array[StackFrame}\n         */\n        fromError: function StackTrace$$fromError(error, opts) {\n            opts = _merge(_options, opts);\n            var gps = new StackTraceGPS(opts);\n            return new Promise(function(resolve) {\n                var stackframes = _filtered(ErrorStackParser.parse(error), opts.filter);\n                resolve(Promise.all(stackframes.map(function(sf) {\n                    return new Promise(function(resolve) {\n                        function resolveOriginal() {\n                            resolve(sf);\n                        }\n\n                        gps.pinpoint(sf).then(resolve, resolveOriginal)['catch'](resolveOriginal);\n                    });\n                })));\n            }.bind(this));\n        },\n\n        /**\n         * Use StackGenerator to generate a backtrace.\n         *\n         * @param {Object} opts\n         * @returns {Promise} of Array[StackFrame]\n         */\n        generateArtificially: function StackTrace$$generateArtificially(opts) {\n            opts = _merge(_options, opts);\n            var stackFrames = StackGenerator.backtrace(opts);\n            if (typeof opts.filter === 'function') {\n                stackFrames = stackFrames.filter(opts.filter);\n            }\n            return Promise.resolve(stackFrames);\n        },\n\n        /**\n         * Given a function, wrap it such that invocations trigger a callback that\n         * is called with a stack trace.\n         *\n         * @param {Function} fn to be instrumented\n         * @param {Function} callback function to call with a stack trace on invocation\n         * @param {Function} errback optional function to call with error if unable to get stack trace.\n         * @param {Object} thisArg optional context object (e.g. window)\n         */\n        instrument: function StackTrace$$instrument(fn, callback, errback, thisArg) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                // Already instrumented, return given Function\n                return fn;\n            }\n\n            var instrumented = function StackTrace$$instrumented() {\n                try {\n                    this.get().then(callback, errback)['catch'](errback);\n                    return fn.apply(thisArg || this, arguments);\n                } catch (e) {\n                    if (_isShapedLikeParsableError(e)) {\n                        this.fromError(e).then(callback, errback)['catch'](errback);\n                    }\n                    throw e;\n                }\n            }.bind(this);\n            instrumented.__stacktraceOriginalFn = fn;\n\n            return instrumented;\n        },\n\n        /**\n         * Given a function that has been instrumented,\n         * revert the function to it's original (non-instrumented) state.\n         *\n         * @param {Function} fn to de-instrument\n         */\n        deinstrument: function StackTrace$$deinstrument(fn) {\n            if (typeof fn !== 'function') {\n                throw new Error('Cannot de-instrument non-function object');\n            } else if (typeof fn.__stacktraceOriginalFn === 'function') {\n                return fn.__stacktraceOriginalFn;\n            } else {\n                // Function not instrumented, return original\n                return fn;\n            }\n        },\n\n        /**\n         * Given an error message and Array of StackFrames, serialize and POST to given URL.\n         *\n         * @param {Array} stackframes\n         * @param {String} url\n         * @param {String} errorMsg\n         * @param {Object} requestOptions\n         */\n        report: function StackTrace$$report(stackframes, url, errorMsg, requestOptions) {\n            return new Promise(function(resolve, reject) {\n                var req = new XMLHttpRequest();\n                req.onerror = reject;\n                req.onreadystatechange = function onreadystatechange() {\n                    if (req.readyState === 4) {\n                        if (req.status >= 200 && req.status < 400) {\n                            resolve(req.responseText);\n                        } else {\n                            reject(new Error('POST to ' + url + ' failed with status: ' + req.status));\n                        }\n                    }\n                };\n                req.open('post', url);\n\n                // Set request headers\n                req.setRequestHeader('Content-Type', 'application/json');\n                if (requestOptions && typeof requestOptions.headers === 'object') {\n                    var headers = requestOptions.headers;\n                    for (var header in headers) {\n                        if (Object.prototype.hasOwnProperty.call(headers, header)) {\n                            req.setRequestHeader(header, headers[header]);\n                        }\n                    }\n                }\n\n                var reportPayload = {stack: stackframes};\n                if (errorMsg !== undefined && errorMsg !== null) {\n                    reportPayload.message = errorMsg;\n                }\n\n                req.send(JSON.stringify(reportPayload));\n            });\n        }\n    };\n}));\n\n};"],
"names":["shadow$provide","global","require","module","exports","root","factory","define","amd","StackTrace","ErrorStackParser","StackGenerator","StackTraceGPS","_merge","first","second","target","forEach","obj","prop","Object","prototype","hasOwnProperty","call","_isShapedLikeParsableError","err","stack","_filtered","stackframes","filter","_options","stackframe","indexOf","functionName","sourceCache","_generateError","Error","get","StackTrace$$get","opts","fromError","generateArtificially","getSync","StackTrace$$getSync","parse","backtrace","StackTrace$$fromError","error","gps","Promise","resolve","all","map","sf","resolveOriginal","pinpoint","then","bind","StackTrace$$generateArtificially","stackFrames","instrument","StackTrace$$instrument","fn","callback","errback","thisArg","__stacktraceOriginalFn","instrumented","StackTrace$$instrumented","apply","arguments","e","deinstrument","StackTrace$$deinstrument","report","StackTrace$$report","url","errorMsg","requestOptions","reject","req","XMLHttpRequest","onerror","onreadystatechange","req.onreadystatechange","readyState","status","responseText","open","setRequestHeader","headers","header","reportPayload","undefined","message","send","JSON","stringify"]
}
